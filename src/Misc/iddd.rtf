{\rtf1\ansi\ansicpg1251\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \uc0\u8730 \'abEach StoredEvent instance gets a unique sequence value autogenerated by the database and set as its eventId.\'bb\
\
\
\
\
\'abThe typeName holds the name of the concrete class of the corresponding DomainEvent, and occurredOn is a copy of the same occurredOn in the DomainEvent.\'bb\
\
\uc0\u1054 \u1090 \u1088 \u1099 \u1074 \u1086 \u1082  \u1080 \u1079  \u1082 \u1085 \u1080 \u1075 \u1080 : Vernon, Vaughn. \'abImplementing Domain-Driven Design\'bb. Apple\'a0Books. \
\
\
\
\'abCREATE TABLE `tbl_stored_event` (\
\'a0\'a0\'a0\'a0`event_id` int(11) NOT NULL auto_increment,\
\'a0\'a0\'a0\'a0`event_body` varchar(65000) NOT NULL,\
\'a0\'a0\'a0\'a0`occurred_on` datetime NOT NULL,\
\'a0\'a0\'a0\'a0`type_name` varchar(100) NOT NULL,\
\'a0\'a0\'a0\'a0PRIMARY KEY (`event_id`)\
) ENGINE=InnoDB;\'bb\
\
\uc0\u1054 \u1090 \u1088 \u1099 \u1074 \u1086 \u1082  \u1080 \u1079  \u1082 \u1085 \u1080 \u1075 \u1080 : Vernon, Vaughn. \'abImplementing Domain-Driven Design\'bb. Apple\'a0Books. \
\
\'abArchitectural Styles for Forwarding Stored Events\
Once the Event Store is populated, it is available to provide Events to be forwarded as notifications to interested parties. \'bb\
\
\uc0\u1054 \u1090 \u1088 \u1099 \u1074 \u1086 \u1082  \u1080 \u1079  \u1082 \u1085 \u1080 \u1075 \u1080 : Vernon, Vaughn. \'abImplementing Domain-Driven Design\'bb. Apple\'a0Books. \
\
\
\
\
\'ab The messaging system also allows you to fairly easily support both Publish-Subscribe and Queues, whichever better fits your needs. In both cases the messaging system uses a push model to send messages of Event notifications to registered subscribers or listeners.\'bb\
\
\uc0\u1054 \u1090 \u1088 \u1099 \u1074 \u1086 \u1082  \u1080 \u1079  \u1082 \u1085 \u1080 \u1075 \u1080 : Vernon, Vaughn. \'abImplementing Domain-Driven Design\'bb. Apple\'a0Books. \
\
\'abThe use of any such messaging mechanism between Bounded Contexts requires that we adopt a commitment to eventual consistency. It can\'92t be fought. The changes in one model that influence changes in one or more other models will not be fully consistent for some elapsed period of time. What is more, depending on the traffic to individual systems and the effects they have on others, it may be that the systems as a whole may never be fully consistent at any one instant in time.\'bb\
\
\uc0\u1054 \u1090 \u1088 \u1099 \u1074 \u1086 \u1082  \u1080 \u1079  \u1082 \u1085 \u1080 \u1075 \u1080 : Vernon, Vaughn. \'abImplementing Domain-Driven Design\'bb. Apple\'a0Books. \
}